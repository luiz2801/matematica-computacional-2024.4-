import numpy as np
import matplotlib.pyplot as plt

def simpson_13(f, a, b, n):
    if n % 2 == 1:
        raise ValueError("O número de subintervalos (n) deve ser par.")
    
    h = (b - a) / n
    x = np.linspace(a, b, n + 1)
    y = f(x)
    
    return (h / 3) * (y[0] + y[-1] + 4 * np.sum(y[1:n:2]) + 2 * np.sum(y[2:n-1:2]))
    

def plot_function(f, a, b, n):
    x = np.linspace(a, b, 1000)
    y = f(x)
    plt.plot(x, y, label='f(x)', color='blue')
    
    x_simp = np.linspace(a, b, n + 1)
    y_simp = f(x_simp)
    plt.scatter(x_simp, y_simp, color='red', zorder=3, label='Pontos de Simpson')
    
    plt.xlabel("x")
    plt.ylabel("f(x)")
    plt.title("Integração pela Regra 1/3 de Simpson")
    plt.legend()
    plt.grid()
    plt.show()

# Exemplo de uso
def f(x):
    return x

a, b = 0, 10
n = 50000*2  # Deve ser par

resultado = simpson_13(f, a, b, n)
print(f"A integral aproximada é: {resultado}")

plot_function(f, a, b, n)
